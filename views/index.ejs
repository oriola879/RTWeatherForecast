<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="styles.css">
    <title>Home</title>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-info fixed-top">
    <a class="navbar-brand" href="#"><strong>Weather Forecast / Home</strong></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <a class="nav-link" href="/"><strong>Home</strong></a>
            </li>
            <% if (user) { %>
                <li class="nav-item dropdown">
                    <a class="btn btn-primary dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        My Account
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="/account">Account</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/logout">Logout</a>
                    </div>
                </li>
            <% } else { %>
                <li class="nav-item">
                    <a class="btn btn-primary" href="/login"><Strong>Login</Strong></a>
                </li>
            <% } %>
        </ul>
    </div>
</nav>

<section class="d-flex justify-content-center align-items-center vh-5 bg-light">
    <div class="w-75 d-flex flex-column align-items-center justify-content-center px-4 py-5 mx-auto">
        <a href="/" class="d-flex align-items-center mb-4 fs-2 fw-semibold text-dark">
        </a>
        <div class="w-100 bg-white rounded-lg shadow border p-4">
            <div class="p-4">
                <h1 class="fs-4 fw-bold text-dark">
                    Get weather update
                </h1>
                <form id="locationForm" class="mt-4" action="" method="GET">
                    <label for="location">Location:</label>
                    <input type="text" id="location" name="location" placeholder="Search location..." class="form-control" required>
                    <div id="autocompleteResults" class="autocomplete-results"></div> <!-- Container for autocomplete suggestions -->
                    <button type="submit" class="btn btn-primary mt-2">Get Weather</button>
                </form>
                <div id="weatherResult" class="mt-4"></div>
            </div>
        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    document.getElementById('locationForm').addEventListener('submit', async (event) => {
        event.preventDefault(); // Prevent default form submission

        const location = document.getElementById('location').value.trim();
        if (location.length < 3) {
            return; // Do nothing if location is too short
        }

        try {
            const response = await fetch('/weather/' + encodeURIComponent(location)); // Use the correct endpoint URL
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const weatherData = await response.json();
            displayWeather(weatherData.locations[location].values);
        } catch (error) {
            console.error('Error fetching weather data:', error);
        }
    });

    document.getElementById('location').addEventListener('input', async (event) => {
        const input = event.target.value.trim();
        if (input.length < 3) {
            document.getElementById('autocompleteResults').innerHTML = '';
            return;
        }
        try {
            const response = await fetch('/weather/autocomplete/' + encodeURIComponent(input));
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const suggestions = await response.json();
            document.getElementById('autocompleteResults').innerHTML = suggestions.predictions.map(prediction => '<div>' + prediction.description + '</div>').join('');
        } catch (error) {
            console.error('Error fetching autocomplete suggestions:', error);
        }
    });

    document.getElementById('autocompleteResults').addEventListener('click', (event) => {
        if (event.target.tagName === 'DIV') {
            document.getElementById('location').value = event.target.textContent;
            document.getElementById('autocompleteResults').innerHTML = '';
        }
    });

    function displayWeather(data) {
        const weatherResult = document.getElementById('weatherResult');
        weatherResult.innerHTML = ''; // Clear previous results

        // Iterate over each day's weather data
        data.forEach(day => {
            const date = new Date(day.datetime);
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            const formattedDate = date.toLocaleDateString('en-US', options);

            const html = `
            <div class="weather-day">
                <h2 class="mt-4">Weather on ${formattedDate}</h2>
                <pre>
        <strong>Conditions:</strong> ${day.conditions}
        <strong>Temperature:</strong> ${day.temp}°C
        <strong>Max Temperature:</strong> ${day.maxt}°C
        <strong>Min Temperature:</strong> ${day.mint}°C
        <strong>Wind Speed:</strong> ${day.wspd} km/h
        <strong>Cloud Cover:</strong> ${day.cloudcover}%
        <strong>Humidity:</strong> ${day.humidity}%
        <strong>Visibility:</strong> ${day.visibility} km
        <strong>Chance of Precipitation:</strong> ${day.pop}%
                </pre>
            </div>
            <hr>
        `;
            weatherResult.innerHTML += html;
        });
    }
</script>
</body>
</html>